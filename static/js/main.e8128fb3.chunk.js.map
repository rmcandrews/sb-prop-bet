{"version":3,"sources":["components/Leaderboard/Leaderboard.module.scss","services/googleSheets/index.js","components/Leaderboard/Leaderboard.jsx","components/Entry/Entry.jsx","App.js","reportWebVitals.js","index.js","components/Entry/Entry.module.scss"],"names":["module","exports","getSuperBowl","a","year","axios","get","response","data","userPreferences","LocalStorage","id","storageFallback","OpenIcon","Icon","name","size","style","marginLeft","color","Leaderboard","useState","isTrackModalOpen","setIsTrackModalOpen","possibleTrackedEntries","setPossibleTrackedEntries","trackedEntry","setTrackedEntry","superBowl","setSuperbowl","history","useHistory","useEffect","googleSheetsService","entries","forEach","entry","points","Object","answers","question","answer","value","tiebreakerDifference","Math","abs","tiebreaker","sort","b","currentPoints","currentPlace","displayPlace","place","leader","possibleRemainingPoints","includes","parseInt","split","isEliminated","query","prop","read","correspondingEntry","find","email","initialize","handleEntryClick","hasStarted","push","pathname","state","className","styles","leaderboardPage","backgroundColor","padding","fontSize","marginTop","href","target","rel","container","item","eliminated","cursor","onClick","width","round","itemName","itemPoints","map","border","trackYourself","role","isOpen","onRequestClose","trackYourselfModal","ariaHideApp","Form","onSubmit","possibleEntries","filter","Field","margin","Input","placeholder","type","autoFocus","Button","searchButton","primary","basic","length","possibleEntry","i","update","loadingContainer","Loader","active","Entry","useLocation","to","correctAnswers","entryPage","avatar","keys","score","isCorrect","isSettled","questionAndAnswer","marginRight","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8128fb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"leaderboardPage\":\"Leaderboard_leaderboardPage__2YuCy\",\"container\":\"Leaderboard_container__3MruL\",\"loadingContainer\":\"Leaderboard_loadingContainer__3pvtD\",\"item\":\"Leaderboard_item__3KlS6\",\"eliminated\":\"Leaderboard_eliminated__151ch\",\"itemName\":\"Leaderboard_itemName__2cxhb\",\"itemPoints\":\"Leaderboard_itemPoints__2JfTD\",\"trackYourself\":\"Leaderboard_trackYourself__17vAc\",\"searchButton\":\"Leaderboard_searchButton__jEegM\",\"trackYourselfModal\":\"Leaderboard_trackYourselfModal__dvGVo\",\"tiebreaker\":\"Leaderboard_tiebreaker__Al65V\"};","import axios from \"axios\";\n\nconst getSuperBowl = async ({ year }) => {\n  const response = await axios.get(\n    \"https://vokbvjr975.execute-api.us-east-1.amazonaws.com/prod/superBowls/\" +\n      year\n  );\n  return response.data;\n};\n\nexport { getSuperBowl };\n","import React, { useState, useEffect } from \"react\";\nimport Avatar from \"react-avatar\";\nimport Modal from \"react-modal\";\nimport { Form, Input, Button, Loader, Icon } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { LocalStorage } from \"@data-provider/browser-storage\";\nimport * as googleSheetsService from \"../../services/googleSheets\";\nimport styles from \"./Leaderboard.module.scss\";\n\nconst userPreferences = new LocalStorage({\n  id: \"user-preferences\",\n  storageFallback: true,\n});\n\nconst OpenIcon = () => (\n  <Icon\n    name=\"angle right\"\n    size=\"small\"\n    style={{ marginLeft: \"0.75rem\", color: \"gray\" }}\n  />\n);\n\nconst Leaderboard = () => {\n  const [isTrackModalOpen, setIsTrackModalOpen] = useState(false);\n  const [possibleTrackedEntries, setPossibleTrackedEntries] = useState();\n  const [trackedEntry, setTrackedEntry] = useState();\n  const [superBowl, setSuperbowl] = useState();\n  let history = useHistory();\n\n  useEffect(() => {\n    const initialize = async () => {\n      const superBowl = await googleSheetsService.getSuperBowl({\n        year: \"2023\",\n      });\n      superBowl.entries.forEach((entry) => {\n        let points = 0;\n        for (const [question, answer] of Object.entries(superBowl.answers)) {\n          if (answer.answer && entry.answers[question] === answer.answer)\n            points += answer.value;\n        }\n        entry.points = points;\n        entry.tiebreakerDifference = Math.abs(\n          entry.tiebreaker - superBowl.answers[\"Tiebreaker\"]\n            ? superBowl.answers[\"Tiebreaker\"].answer\n            : 0\n        );\n      });\n      superBowl.entries.sort((a, b) => {\n        return (\n          b.points - a.points || a.tiebreakerDifference - b.tiebreakerDifference\n        );\n      });\n\n      let currentPoints = 100000;\n      let currentPlace = 1;\n      let displayPlace = 1;\n      superBowl.entries.forEach((entry) => {\n        if (entry.points < currentPoints) {\n          displayPlace = currentPlace;\n          currentPoints = entry.points;\n        }\n        entry.place = displayPlace;\n        currentPlace++;\n      });\n\n      const leader = superBowl.entries[0];\n      superBowl.entries.forEach((entry) => {\n        let possibleRemainingPoints = 0;\n        for (const [question, answer] of Object.entries(entry.answers)) {\n          if (\n            !superBowl.answers[question] ||\n            !superBowl.answers[question].answer\n          ) {\n            possibleRemainingPoints += 0;\n            if (!answer.includes(\"(\")) {\n              possibleRemainingPoints += 1;\n            } else {\n              possibleRemainingPoints += parseInt(\n                answer.split(\"(\")[1].split(\" \")[0]\n              );\n            }\n          }\n        }\n        entry.isEliminated =\n          leader.points - entry.points > possibleRemainingPoints;\n      });\n\n      let trackedEntry = await userPreferences\n        .query({ prop: \"trackedEntry\" })\n        .read();\n\n      if (trackedEntry) {\n        const correspondingEntry = superBowl.entries.find(({ name, email }) => {\n          return trackedEntry.name === name && trackedEntry.email === email;\n        });\n        if (correspondingEntry) {\n          trackedEntry = {\n            ...trackedEntry,\n            ...correspondingEntry,\n          };\n          setTrackedEntry(trackedEntry);\n        }\n      } else {\n        setTrackedEntry(trackedEntry);\n      }\n      setSuperbowl(superBowl);\n    };\n\n    initialize();\n  }, []);\n\n  const handleEntryClick = (entry) => {\n    if (!superBowl.hasStarted) return;\n    history.push({\n      pathname: \"/entry\",\n      state: { entry, answers: superBowl.answers },\n    });\n  };\n\n  if (!superBowl) {\n    return (\n      <div className={styles.loadingContainer}>\n        <Loader size=\"huge\" active>\n          LOADING\n        </Loader>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.leaderboardPage}>\n      <div style={{ backgroundColor: \"white\", padding: \"1.25rem 1rem 1rem\" }}>\n        <div style={{ fontSize: \"2rem\" }}>PROP BET POOL</div>\n        <div style={{ fontSize: \"1rem\", marginTop: 10 }}>\n          sponsored by{\" \"}\n          <a\n            href=\"https://www.bookiebeats.com/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            bookiebeats.com\n          </a>\n        </div>\n      </div>\n      {trackedEntry && (\n        <>\n          <h2>YOU</h2>\n          <div className={styles.container}>\n            <div\n              className={`${styles.item}${\n                trackedEntry.isEliminated ? ` ${styles.eliminated}` : \"\"\n              }`}\n              style={{ cursor: superBowl.hasStarted ? \"pointer\" : \"\" }}\n              onClick={() => {\n                handleEntryClick(trackedEntry);\n              }}\n            >\n              <div style={{ width: \"1.75rem\" }}>{trackedEntry.place}</div>\n              <div>\n                <Avatar\n                  name={trackedEntry.name}\n                  email={trackedEntry.email}\n                  round\n                  size=\"40\"\n                />\n              </div>\n              <div className={styles.itemName}>\n                {trackedEntry.name}\n                {superBowl.hasStarted && (\n                  <div className={styles.tiebreaker}>\n                    Tiebreaker: {trackedEntry.tiebreaker}\n                  </div>\n                )}\n              </div>\n              <div className={styles.itemPoints}>\n                {trackedEntry.points}\n                {superBowl.hasStarted && <OpenIcon />}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      <h2>LEADERBOARD</h2>\n      <div className={styles.container}>\n        {superBowl.entries.map((entry) => {\n          const { name, email, points, place, tiebreaker, isEliminated } =\n            entry;\n          let style = { cursor: superBowl.hasStarted ? \"pointer\" : \"\" };\n          if (\n            trackedEntry &&\n            trackedEntry.name === name &&\n            trackedEntry.email === email\n          ) {\n            style.border = \"2px #6d72c3 solid\";\n          }\n          return (\n            <div\n              key={email}\n              className={`${styles.item}${\n                isEliminated ? ` ${styles.eliminated}` : \"\"\n              }`}\n              style={style}\n              onClick={() => {\n                handleEntryClick(entry);\n              }}\n            >\n              <div style={{ width: \"1.75rem\" }}>{place}</div>\n              <div>\n                <Avatar name={name} email={email} round size=\"40\" />\n              </div>\n              <div className={styles.itemName}>\n                <div>{name}</div>\n                {superBowl.hasStarted && (\n                  <div className={styles.tiebreaker}>\n                    Tiebreaker: {tiebreaker}\n                  </div>\n                )}\n              </div>\n              <div className={styles.itemPoints}>\n                {points}\n                {superBowl.hasStarted && <OpenIcon />}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      {!trackedEntry && (\n        <div\n          className={styles.trackYourself}\n          role=\"button\"\n          onClick={() => setIsTrackModalOpen(true)}\n        >\n          Track Yourself\n        </div>\n      )}\n      <Modal\n        isOpen={isTrackModalOpen}\n        onRequestClose={() => setIsTrackModalOpen(false)}\n        className={styles.trackYourselfModal}\n        ariaHideApp={false}\n      >\n        <h2>Track Yourself</h2>\n        <div>Input your email to find yourself</div>\n        <Form\n          onSubmit={({ target }) => {\n            const possibleEntries = superBowl.entries.filter((entry) => {\n              return entry.email === target[0].value;\n            });\n            setPossibleTrackedEntries(possibleEntries);\n          }}\n        >\n          <Form.Field style={{ width: 300, margin: \"1rem auto\" }}>\n            <Input placeholder=\"Email\" size=\"big\" type=\"email\" autoFocus />\n          </Form.Field>\n          <Button id={styles.searchButton} size=\"big\" primary type=\"submit\">\n            Search\n          </Button>\n          <Button onClick={() => setIsTrackModalOpen(false)} basic size=\"big\">\n            Close\n          </Button>\n        </Form>\n        {possibleTrackedEntries && (\n          <div style={{ marginTop: \"2rem\" }}>\n            <div>{`Found ${possibleTrackedEntries.length}, ${\n              possibleTrackedEntries.length > 0\n                ? \"pick yourself\"\n                : \"did you get your email right?\"\n            }`}</div>\n            {possibleTrackedEntries.map((possibleEntry, i) => {\n              const { name, email } = possibleEntry;\n              return (\n                <div\n                  key={email}\n                  className={styles.item}\n                  style={{ backgroundColor: \"#f3f3f7\", cursor: \"pointer\" }}\n                  role=\"button\"\n                  onClick={() => {\n                    userPreferences\n                      .query({ prop: \"trackedEntry\" })\n                      .update(possibleEntry);\n                    setTrackedEntry(possibleEntry);\n                    setIsTrackModalOpen(false);\n                  }}\n                >\n                  <div>\n                    <Avatar name={name} email={email} round size=\"40\" />\n                  </div>\n                  <div className={styles.itemName} style={{ margin: \"0 1rem\" }}>\n                    {name}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n","import React from \"react\";\nimport Avatar from \"react-avatar\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport styles from \"./Entry.module.scss\";\n\nconst Entry = () => {\n  const { state } = useLocation();\n  if (!state) return <Redirect to=\"/\" />;\n  const { name, email, answers, points } = state.entry;\n  const correctAnswers = state.answers;\n  return (\n    <div className={styles.entryPage}>\n      <div>\n        <Avatar\n          name={name}\n          email={email}\n          round\n          size=\"80\"\n          className={styles.avatar}\n        />\n      </div>\n      <h1 className={styles.name}>{name}</h1>\n      <h2>Score: {points}</h2>\n      {Object.keys(answers).map((question) => {\n        const style = {};\n        let isCorrect = false;\n        let isSettled = false;\n        if (correctAnswers[question] && correctAnswers[question].answer) {\n          isSettled = true;\n          if (correctAnswers[question].answer === \"PUSH\") {\n            style.backgroundColor = \"rgb(205 205 205)\";\n          } else {\n            if (correctAnswers[question].answer === answers[question]) {\n              isCorrect = true;\n              style.backgroundColor = \"#b1dab1\";\n            } else {\n              style.backgroundColor = \"#f7a8a8\";\n            }\n          }\n        }\n\n        let score;\n        if (isSettled) {\n          score = !isCorrect ? 0 : correctAnswers[question].value;\n        }\n\n        return (\n          <div\n            key={question}\n            className={styles.questionAndAnswer}\n            style={style}\n          >\n            <div style={{ marginRight: \"3rem\" }}>\n              <div className={styles.question}>{question}</div>\n              <div className={styles.answer}>{answers[question]}</div>\n            </div>\n            <div style={{ marginLeft: \"auto\", fontSize: 22 }}>{score}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Entry;\n","import \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Leaderboard from \"./components/Leaderboard/Leaderboard\";\nimport Entry from \"./components/Entry/Entry\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/entry\">\n            <Entry />\n          </Route>\n          <Route path=\"/\">\n            <Leaderboard />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"typeface-roboto\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entryPage\":\"Entry_entryPage__1cH3z\",\"avatar\":\"Entry_avatar__1SgQz\",\"name\":\"Entry_name__24jq1\",\"questionAndAnswer\":\"Entry_questionAndAnswer__2PNQU\",\"question\":\"Entry_question__3UZ1W\",\"answer\":\"Entry_answer__38TTM\"};"],"sourceRoot":""}